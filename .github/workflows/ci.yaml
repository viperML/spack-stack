name: ci

on:
  workflow_dispatch:
  push:

concurrency:
  group: ci

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - env: debian-11
            image: debian:11
            os: debian-11
          - env: debian-11-ai
            image: debian:11
            os: debian-11
          - env: rhel-8
            image: redhat/ubi8
            os: rhel-8
          - env: rhel-9
            image: redhat/ubi9
            os: rhel-8
    container:
      image: ${{ matrix.image }}
      volumes:
        - /opt:/opt
        - /tmp:/tmp
    steps:
      - name: Install Debian dependencies
        if: matrix.os == 'debian-11'
        # Dependencies copied from:
        # https://github.com/spack/spack/blob/develop/share/spack/templates/container/ubuntu_2404.dockerfile
        run: |
          apt-get -yqq update
          apt-get -yqq upgrade
          apt-get -yqq install --no-install-recommends \
            build-essential \
            ca-certificates \
            curl \
            file \
            g++ \
            gcc \
            gfortran \
            git \
            gnupg2 \
            iproute2 \
            locales \
            make \
            mercurial \
            subversion \
            python3 \
            python3-boto3 \
            unzip \
            zstd
          locale-gen en_US.UTF-8

      - name: Install RHEL dependencies
        if: matrix.os == 'rhel-8' || matrix.os == 'rhel-9'
        # Dependencies copied from:
        # https://github.com/spack/spack/blob/develop/share/spack/templates/container/almalinux_8.dockerfile
        run: |
          dnf update -y
          dnf install -y --allowerasing \
            bzip2 \
            curl \
            file \
            findutils \
            gcc-c++ \
            gcc \
            gcc-gfortran \
            git \
            gnupg2 \
            hostname \
            iproute \
            make \
            patch \
            python3 \
            python3-pip \
            python3-setuptools \
            svn \
            unzip \
            zstd \
            diffutils \
            xz

      - uses: actions/checkout@v4
        name: Checkout

      - uses: viperML/setup-spack@custom-repo
        with:
          repository: viperML/spack
          ref: dask-fix

      - uses: viperML/spack-buildcache-action@main
        with:
          environment: ./${{ matrix.env }}
          mirror: oci://ghcr.io/viperml/spack-stack/${{ matrix.os }}
          log-name: spack-log-${{ matrix.env }}

      - uses: actions/cache/save@v4
        with:
          path: ./${{ matrix.env }}/spack.lock
          key: spack-lock-${{ matrix.env }}-${{ github.run_id }}

  relock:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: main
    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - name: Pull spack.lock
        uses: actions/cache/restore@v4
        with:
          path: ./debian-11/spack.lock
          key: spack-lock-debian-11-${{ github.run_id }}

      - name: Pull spack.lock
        uses: actions/cache/restore@v4
        with:
          path: ./debian-11-ai/spack.lock
          key: spack-lock-debian-11-ai-${{ github.run_id }}

      - name: Pull spack.lock
        uses: actions/cache/restore@v4
        with:
          path: ./rhel-8/spack.lock
          key: spack-lock-rhel-8-${{ github.run_id }}

      - name: Pull spack.lock
        uses: actions/cache/restore@v4
        with:
          path: ./rhel-9/spack.lock
          key: spack-lock-rhel-9-${{ github.run_id }}

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push spack.lock if changed
        run: |
          shopt -s globstar
          for file in ./**/*.lock; do
            jq < "$file" > /tmp/spack.lock
            cp -vf /tmp/spack.lock "$file"
          done
          git add .
          if ! git diff --cached --quiet; then
            set -e
            git commit -m "ci: update spack.lock"
          fi
          git push origin HEAD:${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
