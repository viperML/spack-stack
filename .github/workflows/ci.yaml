name: ci

on:
  workflow_dispatch:
  push:

concurrency:
  group: ci

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - os: debian
            version: 11
          - os: almalinux
            version: 8
    container:
      image: ${{ matrix.os }}:${{ matrix.version }}
      volumes:
        - /opt:/opt
        - /tmp:/tmp
    steps:
      - name: Install Debian dependencies
        if: matrix.os == 'debian'
        # Dependencies copied from:
        # https://github.com/spack/spack/blob/develop/share/spack/templates/container/ubuntu_2404.dockerfile
        run: |
          apt-get -yqq update
          apt-get -yqq upgrade
          apt-get -yqq install --no-install-recommends \
            build-essential \
            ca-certificates \
            curl \
            file \
            g++ \
            gcc \
            gfortran \
            git \
            gnupg2 \
            iproute2 \
            locales \
            make \
            mercurial \
            subversion \
            python3 \
            python3-boto3 \
            unzip \
            zstd
          locale-gen en_US.UTF-8

      - name: Install AlmaLinux dependencies
        if: matrix.os == 'almalinux'
        # Dependencies copied from:
        # https://github.com/spack/spack/blob/develop/share/spack/templates/container/almalinux_8.dockerfile
        run: |
          dnf update -y
          dnf install -y \
            bzip2 \
            curl \
            file \
            findutils \
            gcc-c++ \
            gcc \
            gcc-gfortran \
            git \
            gnupg2 \
            hg \
            hostname \
            iproute \
            make \
            patch \
            python3 \
            python3-pip \
            python3-setuptools \
            svn \
            unzip \
            zstd

      - uses: actions/checkout@v4
        name: Checkout

      - uses: spack/setup-spack@v2
        with:
          # Locked
          ref: 84276915b9df365bb81b6186087ef1b66eedcc29

      - uses: viperML/spack-buildcache-action@develop
        with:
          environment: ./${{ matrix.os }}-${{ matrix.version }}
          registry: oci://ghcr.io/viperml/spack-stack/${{ matrix.os }}-${{ matrix.version }}

      - uses: actions/cache/save@v4
        with:
          path: spack.lock
          key: spack-lock-${{ github.run_id }}

  # relock:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   needs: main
  #   steps:
  #     - uses: actions/checkout@v4
  #       name: Checkout

  #     - name: Pull spack.lock
  #       uses: actions/cache/restore@v4
  #       with:
  #         path: spack.lock
  #         key: spack-lock-${{ github.run_id }}

  #     - name: Set up Git
  #       run: |
  #         git config --global user.name "github-actions[bot]"
  #         git config --global user.email "github-actions[bot]@users.noreply.github.com"

  #     - name: Commit and push spack.lock if changed
  #       run: |
  #         git add spack.lock
  #         if ! git diff --cached --quiet; then
  #           set -e
  #           git commit -m "ci: update spack.lock"
  #         fi
  #         git push origin HEAD:${{ github.ref_name }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}